version: '3.8'

services:
  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: chainreactions-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - chainreactions-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Core Microservices
  entity-relations:
    build: ./services/entity-relations
    container_name: chainreactions-entity-relations
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - BRIGHT_DATA_API_KEY=${BRIGHT_DATA_API_KEY}
      - BRIGHT_DATA_SERP_ZONE=${BRIGHT_DATA_SERP_ZONE}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-2.5-flash}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chainreactions-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/api/health", "||", "exit", "1"]
      interval: 300s
      timeout: 15s
      retries: 2
      start_period: 60s

  entity-search:
    build: ./services/entity-search
    container_name: chainreactions-entity-search
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - REDIS_URL=redis://redis:6379
      - LINKUP_API_KEY=${LINKUP_API_KEY}
      - LINKUP_BASE_URL=${LINKUP_BASE_URL:-https://api.linkup.so/v1}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chainreactions-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/api/health", "||", "exit", "1"]
      interval: 300s
      timeout: 15s
      retries: 2
      start_period: 60s

  dataset-matching:
    build: ./services/dataset-matching
    container_name: chainreactions-dataset-matching
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - DEFAULT_MIN_CONFIDENCE=${DEFAULT_MIN_CONFIDENCE:-0.6}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chainreactions-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3004/api/health", "||", "exit", "1"]
      interval: 300s
      timeout: 15s
      retries: 2
      start_period: 60s

  data-management:
    build: ./services/data-management
    container_name: chainreactions-data-management
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - UPLOAD_PATH=${UPLOAD_PATH:-./uploads}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-50MB}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - uploads-data:/app/uploads
    restart: unless-stopped
    networks:
      - chainreactions-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3005/api/health", "||", "exit", "1"]
      interval: 300s
      timeout: 15s
      retries: 2
      start_period: 60s

  dataset-search:
    build: ./services/dataset-search
    container_name: chainreactions-dataset-search
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - PORT=3006
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - LINKUP_API_KEY=${LINKUP_API_KEY}
      - LINKUP_API_KEY_2=${LINKUP_API_KEY_2}
      - LINKUP_BASE_URL=${LINKUP_BASE_URL:-https://api.linkup.so/v1}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chainreactions-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3006/api/health", "||", "exit", "1"]
      interval: 180s
      timeout: 30s
      retries: 4
      start_period: 120s

# Networks
networks:
  chainreactions-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

# Named Volumes
volumes:
  redis-data:
    driver: local
    name: chainreactions-redis-data
  uploads-data:
    driver: local
    name: chainreactions-uploads