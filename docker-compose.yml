# =================================================================
# ChainReactions Unified OSINT Platform - Docker Compose Configuration
# =================================================================
version: '3.8'

services:
  # Main Application - ChainReactions Unified OSINT Platform
  chainreactions-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chainreactions-unified
    ports:
      - "3000:3000"
    environment:
      # Production Environment
      - NODE_ENV=production

      # Redis Configuration
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379

      # Core API Keys (Required - Set these in .env file)
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - BRIGHT_DATA_API_KEY=${BRIGHT_DATA_API_KEY}
      - BRIGHT_DATA_SERP_ZONE=${BRIGHT_DATA_SERP_ZONE}

      # Database Configuration
      - LINKUP_API_KEY=${LINKUP_API_KEY}
      - LINKUP_API_KEY_2=${LINKUP_API_KEY_2}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}

      # Email Service Configuration
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}

      # Server Configuration
      - PORT=3000
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - app-logs:/app/logs
    restart: unless-stopped
    networks:
      - chainreactions-network
    healthcheck:
      # Simple TCP port check instead of HTTP endpoint to avoid any potential API calls
      test: ["CMD-SHELL", "nc -z localhost 3000 || exit 1"]
      interval: 60s  # Increased from 30s to reduce check frequency
      timeout: 5s
      retries: 3
      start_period: 60s

  # Redis Service - Caching and Session Storage
  redis:
    image: redis:7-alpine
    container_name: chainreactions-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
    restart: unless-stopped
    networks:
      - chainreactions-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    sysctls:
      - net.core.somaxconn=65535

# Named Volumes for Data Persistence
volumes:
  redis-data:
    driver: local
  app-logs:
    driver: local

# Networks
networks:
  chainreactions-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16